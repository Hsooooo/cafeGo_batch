<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="paymentcancelXo">
	
	<!-- 결제수단별 정책 확인 -->
	<resultMap class="java.util.HashMap" id="policyPaymentMap">
		<result property="pay_method" column="pay_method"/>
		<result property="auto_cancel" column="auto_cancel"/>
	</resultMap>
	<select id="paymentcancelXo.getPolicyPayment" parameterClass="java.util.Map" resultMap="policyPaymentMap">
		SELECT pay_method, NVL(auto_cancel, 0) AS auto_cancel
		  FROM xo_policy_payment
		<isNotEmpty property="payMethod">WHERE pay_method = #payMethod#</isNotEmpty>
	</select>	
	
	<!-- 결제 취소 대상 조회 -->
	<resultMap class="java.util.HashMap" id="paymentCancelMap">
		<result property="order_no" column="order_no"/>
		<result property="user_id" column="user_id"/>
		<result property="status" column="status"/>
		<result property="pay_date" column="pay_date"/>
	</resultMap>	
	<select id="paymentcancelXo.getPaymentCancel" parameterClass="java.util.Map" resultMap="paymentCancelMap">
		SELECT DISTINCT /*+ INDEX(xo IDX_XO_ORDER_04)*/
				xo.order_no, xo.user_id, xo.status, xo.pay_date, xp.pay_method
		  FROM xo_order## xo, xo_payment## xp
		 WHERE xo.order_no  = xp.order_no
		   AND xo.status IN ('11', '22'
		   <isEqual property="pay_method" compareValue="C">, '17'</isEqual>
		   ) 
		   AND xp.pay_method = #pay_method#
		   AND (xo.critical_flag != 'C' or xo.critical_flag is NULL)
		   AND xo.reg_date <![CDATA[<]]> TRUNC(SYSDATE - $auto_cancel$ + 1)
	     ORDER BY order_no
	</select>
	
	<!-- 스타벅스 카드 결제 취소 대상 조회 (특정날짜)-->
	<resultMap class="java.util.HashMap" id="paymentCancelMap">
		<result property="order_no" column="order_no"/>
		<result property="user_id" column="user_id"/>
		<result property="status" column="status"/>
		<result property="pay_date" column="pay_date"/>
		<result property="cancel_count" column="cancel_count"/>
		<result property="pay_method" column="pay_method"/>
	</resultMap>	
	<select id="paymentcancelXo.getPaymentCancelTargetDays" parameterClass="java.util.Map" resultMap="paymentCancelMap">
		SELECT DISTINCT /*+ INDEX(xo IDX_XO_ORDER_02)*/
				xo.order_no, xo.user_id, xo.status, xo.pay_date, xp.pay_method
				, COUNT(*) OVER (PARTITION BY xo.order_no) AS cancel_count
				, TRIM(TO_CHAR(WMSYS.WM_CONCAT(pay_method) OVER (PARTITION BY xo.order_no))) AS pay_method
		  FROM xo_order## xo, xo_payment## xp
		 WHERE xo.order_no  = xp.order_no
		   AND xo.reg_date BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD')+1-0.00001
		   AND xo.status IN ('11', '22')
		   AND xp.pay_method = 'S'
		   AND (xo.critical_flag != 'C' or xo.critical_flag is NULL)
		 ORDER BY xo.order_no
	</select>
	
	<!-- 신용카드 결제 취소 대상 조회 -->
	<resultMap class="java.util.HashMap" id="paymentCancelMap">
		<result property="order_no" column="order_no"/>
		<result property="user_id" column="user_id"/>
		<result property="status" column="status"/>
		<result property="pay_date" column="pay_date"/>
		<result property="cancel_count" column="cancel_count"/>
		<result property="pay_method" column="pay_method"/>
		<result property="model_type" column="model_type"/>
	</resultMap>	
	<select id="paymentcancelXo.getPaymentPgCancelTargetDays" parameterClass="java.util.Map" resultMap="paymentCancelMap">
		SELECT /*+ USE_NL(xo xp) */
				DISTINCT xo.order_no, xo.user_id, xo.status, xo.pay_date
				<!-- , xp.pay_method -->
				, COUNT(*) OVER (PARTITION BY xo.order_no) AS cancel_count
				, TRIM(TO_CHAR(WMSYS.WM_CONCAT(pay_method) OVER (PARTITION BY xo.order_no))) AS pay_method
				, xo.model_type AS model_type
		  FROM xo_order## xo, xo_payment## xp
		 WHERE xo.order_no  = xp.order_no
		   AND xo.status IN ('11', '17', '22') 
		   AND xp.pay_method IN ('C', 'G','M')
		   AND (xo.critical_flag != 'C' or xo.critical_flag is NULL)
		   <isNotEmpty property="startDate">
		     <isNotEmpty property="endDate">
		       AND xo.reg_date BETWEEN TO_DATE(#startDate#||'233000','YYYYMMDDHH24MISS') AND TO_DATE(#endDate#||'232929','YYYYMMDDHH24MISS')
		     </isNotEmpty>
		   </isNotEmpty>
		 ORDER BY xo.order_no
	</select>
	
	<!-- 결제 취소 대상 조회 -->
	<resultMap class="java.util.HashMap" id="paymentEtcCancelMap">
		<result property="order_no" column="order_no"/>
		<result property="user_id" column="user_id"/>
	</resultMap>
	<select id="paymentcancelXo.getPaymentEtcCancel" parameterClass="java.util.Map" resultMap="paymentEtcCancelMap">
		SELECT /*+ INDEX(xo IDX_XO_ORDER_04) */ 
		       DISTINCT xo.order_no, xo.user_id 
		  FROM xo_order## xo 
		 WHERE xo.status IN ('11', '22')
		   AND (xo.model_type IS NULL OR xo.model_type NOT IN ('84'))
		   AND (xo.critical_flag != 'C' OR xo.critical_flag IS NULL)
		 MINUS 
		SELECT /*+ INDEX(xo IDX_XO_ORDER_04) INDEX(xp PK_XO_PAYMENT) */ 
			   DISTINCT xo.order_no, xo.user_id
		  FROM xo_order## xo, xo_payment## xp 
		 WHERE xo.order_no = xp.order_no 
		   AND xo.status IN ('11', '17', '22') 
		   AND xp.pay_method IN ('S', 'C', 'G','M','E') 
		   AND (xo.critical_flag != 'C' OR xo.critical_flag IS NULL)
	</select>

	<!-- 주문 정보 조회 -->
	<select id="paymentcancelXo.getOrder" resultClass="co.kr.istarbucks.xo.batch.common.dto.xo.OrderDto">
		SELECT 
				order_no, user_id, user_name, status, reg_date, order_name
				, total_pay_amt, take_out_flag, packing_flag, mod_date, total_qty, XX1.DEC_VARCHAR2_SEL(phone, 10, 'PHONE') AS phone
				, DECODE(status, '11', 'Y', '17', 'Y', '22', 'Y', 'N') AS check_status_flag, emp_no, emp_auth_app_no
		  FROM xo_order## 
		 WHERE order_no = #orderNo#
		   FOR UPDATE NOWAIT
	</select>
	
	<!-- 결제 정보 조회 -->
	<select id="paymentcancelXo.getPaymentList" resultClass="co.kr.istarbucks.xo.batch.common.dto.xo.PaymentDto">
		SELECT 
				xp.order_no, xp.payment_order, xp.pay_method, xp.amount
				, XX1.DEC_VARCHAR2_SEL(xp.sbc_card_no, 10, 'CARD') AS sbc_card_no, xp.sbc_remain_amt
				, xp.result_code, xp.cancel_date, xp.cancel_result_code, xp.result_msg
				, xp.tid, TO_CHAR(xp.app_date, 'YYYYMMDDHH24MISS') AS app_date_str
				, xp.auth_num, xp.gift_no, xp.prcm_frst_code, xx1.dec_varchar2_sel(xp.mbl_gfcr_no , 10, 'CARD') as mbl_gfcr_no
				, xp.mbl_gfcr_use_cnsnt_no
				, xp.pgcm_code
		  FROM xo_payment## xp
		 WHERE xp.order_no = #orderNo#
		   AND xp.status = 'P'
		 ORDER BY xp.order_no, xp.payment_order	
	</select>
	
	<!-- 주문 정보 업데이트 -->
	<update id="paymentCancelXo.updateOrder" parameterClass="java.util.Map">
		UPDATE xo_order## 
		   SET 
			  <isNotEmpty property="status">
			    <isNotEqual property="status" compareValue="13">
				status = #status#,				<!-- 상태 -->
				</isNotEqual>
			  </isNotEmpty>
			  <isEmpty property="status">
				status = status,					<!-- 상태 -->
			  </isEmpty>
			  <isNotEmpty property="criticalFlag">
				critical_flag = #criticalFlag#,
			  </isNotEmpty>	
				mod_date = SYSDATE			<!-- 변경일 -->
		 WHERE order_no = #orderNo#
	</update>
	
	<!-- 주문 정보 변경 이력 등록 -->
	<update id="paymentCancelXo.insertOrderHistory" parameterClass="java.util.Map">
		INSERT INTO xo_order_history (
				order_no			<!-- 주문번호{"3"+YYYYMMDDHH24MISS+시퀀스5자리} -->
				, user_id			<!-- 사용자아이디 -->
				, user_name			<!-- 사용자명 -->
				, status			<!-- 상태{코드표참조} -->
				, history_channel	<!-- 변경경로{1-USER, 2-POS, 3-ADMIN, 4-BATCH} -->
				, reg_date			<!-- 등록일 -->
				, store_cd			<!-- 매장코드 -->
				, pos_no			<!-- POS번호 -->
				, sale_date			<!-- 영업일{YYYYMMDD} -->
				, seq_no			<!-- 거래번호 -->
				, tran_seq_no		<!-- POS승인번호 -->
				, cashier_id		<!-- 파트너ID -->
		)
		SELECT 
				 order_no
				, user_id
				, user_name
				<isNotEmpty property="status">, #status#</isNotEmpty>
				<isEmpty property="status">, status</isEmpty>
				, '4' 
				, SYSDATE
				, store_cd
				, pos_no
				, sale_date
				, seq_no
				, tran_seq_no
				, cashier_id
		  FROM xo_order##
		 WHERE order_no = #orderNo#
	</update>
	
	<!-- 결제 정보 수정 -->
	<update id="paymentCancelXo.updatePayment" parameterClass="co.kr.istarbucks.xo.batch.common.dto.xo.PaymentDto" >
		UPDATE xo_payment##
		   SET 
				order_no = #order_no#
				, payment_order = $payment_order$
				<isNotEmpty property="sbc_remain_amt">, sbc_remain_amt = $sbc_remain_amt$</isNotEmpty> <!-- 스타벅스카드 잔액 -->
				<isNotEmpty property="tid">, tid = #tid#</isNotEmpty>								<!-- PG거래번호 -->
				<!-- 결제 취소 결과 등록 -->
				<isNotEmpty property="cancel_result_code">
					, cancel_result_code = #cancel_result_code#	<!-- 취소결과 -->
					, cancel_date = SYSDATE						<!-- 취소일시 -->
					<isEmpty property="status">
						<isEqual property="cancel_result_code" compareValue="00">, status='C'</isEqual>
						<isEqual property="cancel_result_code" compareValue="96">, status='L'</isEqual>
						<isEqual property="cancel_result_code" compareValue="97">, status='R'</isEqual>
						<isEqual property="cancel_result_code" compareValue="98">, status='R'</isEqual>
						<isEqual property="cancel_result_code" compareValue="99">, status='R'</isEqual>
					</isEmpty>
					<isNotEmpty property="status">, status = #status#</isNotEmpty>	<!-- PG는 취소 코드가 정의되지 않아 상태값을 직접 넣어줌 -->
				</isNotEmpty>
			    <isNotEmpty property="result_msg">, result_msg = #result_msg#</isNotEmpty>
				<isNotEmpty property="mbl_gfcr_use_cnsnt_no">, mbl_gfcr_use_cnsnt_no = #mbl_gfcr_use_cnsnt_no#</isNotEmpty>
			    <isNotEmpty property="mbl_gfcr_cnclt_cnsnt_no">, mbl_gfcr_cnclt_cnsnt_no = #mbl_gfcr_cnclt_cnsnt_no#</isNotEmpty>
		 WHERE order_no = #order_no#
		   AND payment_order = $payment_order$
	</update>
	
	<!-- 타 카드 충전 환불 -->
	<update id="paymentcancelXo.insertRefundSbc" parameterClass="co.kr.istarbucks.xo.batch.common.dto.xo.RefundSbcDto" >
		INSERT INTO xo_refund_sbc## (
			order_no				<!-- 주문번호{"3"+YYYYMMDDHH24MISS+시퀀스5자리} -->
			, user_id				<!-- 사용자아이디 -->
			, target_card_number	<!-- 충전카드번호{암호화} -->
			, result				<!-- 결과{1-성공, 0-실패} -->
			, result_msg			<!-- 결과메세지 -->
			, reg_date				<!-- 처리일시 -->
			, amount				<!-- 금액 -->
			, sbc_nickname			<!-- 스타벅스카드 닉네임 -->
		) VALUES (
			#order_no#
			, #user_id#
			, XX1.ENC_VARCHAR2_INS(#target_card_number#, 10, 'CARD')
			, #result#
			, #result_msg#
			, SYSDATE
			, $amount$
			, #sbc_nickname#
		)
	</update>
	
	<!-- SMS 발송 요청(계정 : MMS) -->
	<insert id="paymentcancelXo.insertSmtTran" parameterClass="co.kr.istarbucks.xo.batch.common.dto.xo.SmtTranDto">
		<selectKey resultClass="java.lang.Long" keyProperty="mt_pr">
			SELECT  mms.SQ_EM_MMT_TRAN_01.nextval as order_no FROM DUAL
		</selectKey>
		INSERT INTO mms.em_mmt_tran (
		        mt_pr				<!-- 메시지 고유 아이디 -->
		        , priority			<!-- 전송 우선 순위{VF-Very Fast, F-Fast, S-Slow} -->
		        , date_client_req	<!-- 전송 예약 시간 -->
		        , subject			<!-- 메시지제목 -->
		        , content_type		<!-- 전송메시지 타입{0-일반, 1-IBL 타입} -->
		        , content			<!-- 전송 메시지 -->
		        , callback			<!-- 발신자 전화 번호 -->
		        , service_type		<!-- 서비스 메시지 전송 타입{0-SMS MT, 1-CALLBACK URL, 2-MMS MT, 3-LMS} -->
		        , broadcast_yn		<!-- 동보 발송 유무{'N' : 단일건, 'Y' :동보건} -->
		        , msg_status		<!-- 메시지 상태{1-전송대기, 2-결과대기, 3-완료} -->
		        , recipient_num		<!-- 수신자 전화 번호 -->
		        , country_code		<!-- 국가코드{82} -->
		        , crypto_yn			<!-- 암호화사용유무 -->
		        , reg_date			<!-- 데이터 등록일자 -->
		) VALUES (
		        #mt_pr#
		        , #priority#
		        <isNotEmpty property="reservation_time">
		        , CASE WHEN TO_CHAR(SYSDATE, 'HH24MI') <![CDATA[<]]> #reservation_time# THEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')||#reservation_time#, 'YYYYMMDDHH24MI')
		               ELSE SYSDATE
		           END 
		        </isNotEmpty>
		        <isEmpty property="reservation_time">
		        , SYSDATE
		        </isEmpty>
		        , #subject#
		        , '0'
		        , #content#
		        , #callback#
		        , '3'
		        , 'N'
		        , '1'
		        , #recipient_num#
		        , '82'
		        , 'N'
		        , SYSDATE
		)
	</insert>
	
	<!-- SMS 발송 이력 등록 -->
	<update id="paymentcancelXo.insertSmsHistory" parameterClass="co.kr.istarbucks.xo.batch.common.dto.xo.SmsHistoryDto">
		INSERT INTO xo_sms_history## (
				mt_pr		<!-- 메세지 고유 아이디 -->
				, phone		<!-- 휴대폰번호{암호화} -->
				, user_id	<!-- 사용자아이디 -->
				, content	<!-- 메세지 -->
				, order_no	<!-- 주문번호 -->
				, reg_date	<!-- 등록일 -->
		) VALUES (
				$mt_pr$
				, XX1.ENC_VARCHAR2_INS(#phone#, 10, 'PHONE')
				, #user_id#
				, #content#
				, #order_no#
				, SYSDATE
		)
	</update>
	
	<!-- 주문상세의 쿠폰정보 조회 -->
     <select id="paymentcancelXo.getOrderCouponInfo" parameterClass="string" resultClass="co.kr.istarbucks.xo.batch.common.dto.xo.OrderCouponDto">
    	SELECT XO.ORDER_NO,
    		   XO.USER_ID, 
		       XOD.ITEM_SEQ, 
		       XOD.SEQ_SUB_NO, 
		       XOD.COUPON_NUMBER,
		       XOD.COUPON_DC_AMT,
		       XOD.COND_ITEM_SEQ, 
		       XOD.CATE_TYPE, 
		       XOD.CUP_TYPE 
		  FROM XO_ORDER## XO, XO_ORDER_DETAIL XOD 
		 WHERE XO.ORDER_NO = #orderNo# 
		   AND XO.ORDER_NO = XOD.ORDER_NO
		   AND XOD.COUPON_NUMBER IS NOT NULL
    </select>
    
    <!-- 결제 취소시 에러 발생으로 인한 결제정보 변경이력 등록 -->
	<update id="paymentcancelXo.insertPaymentOfPaymentHist" parameterClass="co.kr.istarbucks.xo.batch.common.dto.xo.PaymentDto">
	    INSERT
	      INTO XO_PAYMENT##
	           (
	               ORDER_NO 
	             , PAYMENT_ORDER 
	             , PAY_METHOD
	           <isNotEmpty property="amount">  
	             , AMOUNT
	           </isNotEmpty>
	           <isNotEmpty property="sbc_card_no">
	             , SBC_CARD_NO
	           </isNotEmpty>
	           <isNotEmpty property="tid">
	             , TID
	           </isNotEmpty>
	             , APP_DATE 
	           <isNotEmpty property="result_code">
	             , RESULT_CODE
	           </isNotEmpty>
	           <isNotEmpty property="result_msg">
	             , RESULT_MSG
	           </isNotEmpty>
	             , STATUS
	           ) 
	           VALUES
	           (
	               #order_no#
	             , (SELECT MAX(PAYMENT_ORDER) + 1
					  FROM XO_PAYMENT##
					 WHERE ORDER_NO = #order_no#) 
	             , #pay_method# 
	           <isNotEmpty property="amount">  
	             , $amount$
	           </isNotEmpty>
	           <isNotEmpty property="sbc_card_no">
	             , XX1.ENC_VARCHAR2_INS(#sbc_card_no#, 10, 'CARD')
	           </isNotEmpty>
	           <isNotEmpty property="tid">
	             , #tid#
	           </isNotEmpty>
	           <isNotEmpty property="tel_app_date">
	             , TO_DATE(#tel_app_date#, 'YYYYMMDDHH24MISS')		<!-- 승인일시(통신사) -->
	           </isNotEmpty>
	           <isEmpty property="tel_app_date">
		         , SYSDATE											<!-- 승인일시 -->
	           </isEmpty>
	           <isNotEmpty property="result_code">  
	             , #result_code#
	           </isNotEmpty>
	           <isNotEmpty property="result_msg"> 
	             , #result_msg#
	           </isNotEmpty>
	             , #status#
	           )  
	</update>
	
	<resultMap class="java.util.HashMap" id="couponInfoMap">
		<result property="couponNumber" 		column="coupon_number" javaType="java.lang.String"/>
		<result property="couponDcAmt" 			column="coupon_dc_amt" javaType="java.lang.String"/>
		<result property="couponProductCode" 	column="sku_no" 	   javaType="java.lang.String"/>
	</resultMap>
	
	<!-- 사이렌오더 주문내역에서 사용된  SKU 및 쿠폰번호 조회  -->
    <select id="paymentcancelXo.getCouponNumber" parameterClass="java.lang.String" resultMap="couponInfoMap">
    	SELECT lpad(sku_no, 13, '0') as sku_no, coupon_number, coupon_dc_amt
		  FROM XO_ORDER_DETAIL
		 WHERE order_no = #xopOrdNo#
		   AND coupon_number IS NOT NULL
    </select>

	<resultMap class="java.util.HashMap" id="paymentCancelMap">
		<result property="order_no" column="order_no"/>
		<result property="user_id" column="user_id"/>
		<result property="status" column="status"/>
		<result property="pay_date" column="pay_date"/>
		<result property="cancel_count" column="cancel_count"/>
		<result property="pay_method" column="pay_method"/>
		<result property="model_type" column="model_type"/>
	</resultMap>	
	<select id="paymentcancelXo.getPaymentEventCancel" resultMap="paymentCancelMap">
		 SELECT /*+ USE_NL(xo xp) */
				DISTINCT xo.order_no, xo.user_id, xo.status, xo.pay_date
				<!-- , xp.pay_method -->
				, COUNT(*) OVER (PARTITION BY xo.order_no) AS cancel_count
				, TRIM(TO_CHAR(WMSYS.WM_CONCAT(pay_method) OVER (PARTITION BY xo.order_no))) AS pay_method
				, xo.model_type AS model_type
		  FROM xo_order## xo, xo_payment## xp
		 WHERE xo.order_no IN (
								  SELECT /*+ ORDERED USE_NL(xo xod) INDEX(xod pk_xo_order_detail) */
								         xod.order_no
									FROM xo_order## xo, xo_order_detail xod
								   WHERE xo.status IN ('11', '22')
									 AND (xo.critical_flag != 'C' or xo.critical_flag is NULL)                                     
									 AND xo.order_no = xod.order_no
									 AND xod.event_code IS NOT NULL
								   GROUP BY xod.order_no 
							  )
		   AND xo.order_no  = xp.order_no
		   AND xp.pay_method IN ('S','C','G','M','T')
		 ORDER BY xo.order_no 
	</select>

	<!-- 홀케익 예약 내역에서 사용된  SKU 및 쿠폰번호 조회  -->
    <select id="paymentcancelXo.getWholecakeOrderCouponNumber" parameterClass="java.lang.String" resultMap="couponInfoMap">
    	SELECT lpad(sku_no, 13, '0') as sku_no, coupon_number, coupon_dc_amt
		  FROM XO_WHOLECAKE_ORDER_DETAIL
		 WHERE order_no = #xopOrdNo#
		   AND coupon_number IS NOT NULL
    </select>
    
    <!-- 취소 가능 여부 확인 -->
	<select id="paymentcancelXo.getGiftUseCancel" parameterClass="java.lang.String" resultClass="java.lang.String">
 		SELECT NVL((
					SELECT 
					       CASE 
					           WHEN STATUS = 'G10' THEN 'Y'
					           ELSE 'N'
					       END CANCEL_YN
					  FROM XO_GIFT_ISSUE##
					 WHERE GIFT_NO = #giftNo#
		 		), 'N') CANCEL_YN
		  FROM DUAL
	</select>
	
	<!-- 선물 사용 후 사용 이력 등록 -->
	<insert id="paymentcancelXo.insertGiftUseHistory" parameterClass="java.util.Map">
		INSERT INTO XO_GIFT_ORDER_HISTORY (GIFT_ORDER_NO, GIFT_NO, STATUS, HISTORY_CHANNEL, REG_DATE, ORDER_NO, REG_ID, REG_NAME)
		VALUES (
				   (SELECT GIFT_ORDER_NO FROM XO_GIFT_ISSUE## WHERE GIFT_NO = #giftNo#),
				    #giftNo#,
				    #status#,
				    #historyChannel#,
				    SYSDATE,				    
				    #orderNo#,				    
				    #regId#,
				    #regName#
 			  )
	</insert>
	
	<!-- 선물 상태 수정 -->
	<update id="paymentcancelXo.updateGiftStatus" parameterClass="java.util.Map">
		UPDATE XO_GIFT_ISSUE##
		   SET STATUS = #status#
			   ,USE_DATE = null			
			   ,USE_TYPE = null
			   ,USE_KIND = null
		 WHERE GIFT_NO = #giftNo#
	</update>

    <update id="paymentcancelXo.updateEmpOrder" parameterClass="java.util.Map">
        UPDATE XO_ORDER##
           SET EMP_AUTH_APP_NO = #authAppNo#,
               EMP_AUTH_SALE_DATE = #authSaleDate#,
               EMP_AUTH_STORE_CD = #authStoreCd#,
               EMP_AUTH_POS_NO = #authPosNo#,
               EMP_AUTH_SEQ_NO = #authSeqNo#
         WHERE ORDER_NO = #orderNo#
           AND EMP_NO = #empNo#
    </update>

	<!-- 제휴사 정보 조회 -->
	<resultMap class="java.util.HashMap" id="mblGfcrPrcmInfoMap">
		<result property="PRCM_FRST_CODE" column="PRCM_FRST_CODE"/>
		<result property="PRCM_NAME" column="PRCM_NAME"/>
		<result property="RCPT_OTPT_NAME" column="RCPT_OTPT_NAME"/>
		<result property="ATCL_GFCR_YN" column="ATCL_GFCR_YN"/>
		<result property="AMNT_GFCR_YN" column="AMNT_GFCR_YN"/>
		<result property="SROR_STLMN_DVSN_CODE" column="SROR_STLMN_DVSN_CODE"/>
		<result property="INTRL_MEANS_CODE" column="INTRL_MEANS_CODE"/>
		<result property="INTRL_IPADS" column="INTRL_IPADS"/>
		<result property="PORT_NO" column="PORT_NO"/>
		<result property="INTRL_URL" column="INTRL_URL"/>
		<result property="CNCTN_TMT_TME" column="CNCTN_TMT_TME"/>
		<result property="RSPNS_TMT_TME" column="RSPNS_TMT_TME"/>
		<result property="ENCRY_MODE_CODE" column="ENCRY_MODE_CODE"/>
		<result property="CRPTG_KEY" column="CRPTG_KEY"/>
		<result property="INTVC_KEY" column="INTVC_KEY"/>
		<result property="CHST_NAME" column="CHST_NAME"/>
		<result property="XCHNG_CMPY_CODE" column="XCHNG_CMPY_CODE"/>
		<result property="USR_ATHN_CODE" column="USR_ATHN_CODE"/>
		<result property="MBL_GFCR_STORE_CODE" column="MBL_GFCR_STORE_CODE"/>
		<result property="MBL_GFCR_STORE_NAME" column="MBL_GFCR_STORE_NAME"/>
		<result property="MBL_GFCR_POS_NO" column="MBL_GFCR_POS_NO"/>
		
	</resultMap>
	<select id="paymentcancelXo.getMblGfcrPrcmInfo" parameterClass="java.util.Map" resultMap="mblGfcrPrcmInfoMap">
		SELECT 
		        PRCM_FRST_CODE
		        ,PRCM_NAME
		        ,RCPT_OTPT_NAME
		        ,ATCL_GFCR_YN
		        ,AMNT_GFCR_YN
		        ,SROR_STLMN_DVSN_CODE
		        ,INTRL_MEANS_CODE
		        ,INTRL_IPADS
		        ,PORT_NO
		        ,INTRL_URL
		        ,CNCTN_TMT_TME
		        ,RSPNS_TMT_TME
		        ,ENCRY_MODE_CODE
		        ,xx1.dec_varchar2_sel(crptg_key,10,'TRANDATA') as CRPTG_KEY
		        ,xx1.dec_varchar2_sel(intvc_key,10,'TRANDATA') as INTVC_KEY
		        ,nvl(CHST_NAME,'utf-8') as CHST_NAME
		        ,XCHNG_CMPY_CODE
		        ,USR_ATHN_CODE
		        ,MBL_GFCR_STORE_CODE
		        ,MBL_GFCR_STORE_NAME
		        ,MBL_GFCR_POS_NO
		  FROM XO_MBL_GFCR_PRCM_M##
		 WHERE prcm_frst_code = #prefix#
		   AND use_yn = 'Y'
		   AND cnpr_begin_date <![CDATA[ <= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
		   AND cnpr_trmnt_date <![CDATA[ >= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>	
    
    <!-- e-Gift Item LMS 수신 실패 건 조회 -->
    <resultMap class="java.util.HashMap" id="lmsGinftItemMap">
		<result property="USER_ID" column="USER_ID"/>
		<result property="USER_NAME" column="USER_NAME"/>
		<result property="GIFT_ORDER_NO" column="GIFT_ORDER_NO"/>
		<result property="LMS_SEND_MONTH" column="LMS_SEND_MONTH"/>
		<result property="LMS_SEND_DAY" column="LMS_SEND_DAY"/>
	</resultMap>	
	<select id="paymentcancelXo.getEGiftItemLmsList" parameterClass="java.lang.String" resultMap="lmsGinftItemMap">
		 SELECT XGO.USER_ID AS USER_ID
				, XGO.USER_NAME AS USER_NAME
				, XGO.GIFT_ORDER_NO AS GIFT_ORDER_NO
				, TO_CHAR(XGO.SEND_DATE, 'MM') AS LMS_SEND_MONTH
				, TO_CHAR(XGO.SEND_DATE, 'DD') AS LMS_SEND_DAY
		   FROM XO_GIFT_ORDER## XGO,
			    (
				 SELECT XO_ORDER_NO AS GIFT_ORDER_NO
					    , SUM(CASE WHEN MT_REPORT_CODE_IB = '1000' THEN 1 ELSE 0 END) AS SUCC_CNT	<!-- LMS 성공건이 없는 수신건만 조회하기 위해 LMS 성공이면 1로 지정 -->
				   FROM MMS.EM_MMT_TRAN
				  WHERE (TRUNC(DATE_CLIENT_REQ) <![CDATA[>=]]> (TO_DATE(#date#, 'YYYYMMDD') -3) AND TRUNC(DATE_CLIENT_REQ) <![CDATA[<=]]> TO_DATE(#date#, 'YYYYMMDD'))
				    AND MSG_STATUS = '3'															<!-- 메세지 상태(1-전송대기, 2-결과대기, 3-완료) -->
					AND SERVICE_TYPE = '3'															<!-- 서비스 메세지 전송 타입(0-SMS MT, 1-CALLBACK URL, 2-MMS, 3-LMS) -->
					AND PUSH_SEND_YN IS NULL														<!-- LMS 전송 실패에 대한 구매자에게 푸시 알람 발송여부(Y : 발송) -->
					AND XO_ORDER_NO IS NOT NULL
				  GROUP BY XO_ORDER_NO
				 HAVING SUM(CASE WHEN MT_REPORT_CODE_IB = '1000' THEN 1 ELSE 0 END) = 0				<!-- LMS 성공건이 없는 수신건만 조회 -->
			    ) EMT
		  WHERE XGO.GIFT_ORDER_NO = EMT.GIFT_ORDER_NO
			AND XGO.STATUS = 'O20'																	<!-- e-Gift Item의 상태가 결제완료('O20')인 것만 조회 -->
		  ORDER BY XGO.GIFT_ORDER_NO ASC
	</select>
    
    <!-- e-Gift Item LMS 수신 실패에 대한 구매자에게 푸시 알림 발송여부(Y : 발송) Update -->
	<update id="paymentcancelXo.updateEmMmtTran" parameterClass="java.util.Map">
		UPDATE MMS.EM_MMT_TRAN
		   SET PUSH_SEND_YN = 'Y'
		 WHERE XO_ORDER_NO = #orderNo#
	</update>

   	<resultMap class="java.util.HashMap" id="pgTradeCancelMap">
		<result property="pgDlngNo"         column="pgDlngNo"/>
		<result property="intrfRgsttDate"   column="intrfRgsttDate" />
		<result property="intrfHms"   		column="intrfHms" />
		<result property="pgcmCode"   		column="pgcmCode" />
		<result property="pgcmShopId"   	column="pgcmShopId" />
		<result property="pgcmOrderId"   	column="pgcmOrderId" />
		<result property="stlmnTypeName"   	column="stlmnTypeName" />
		<result property="stlmnMeanName"   	column="stlmnMeanName" />
		<result property="pgStlmnAmnt"   	column="pgStlmnAmnt" />
		<result property="pgDlngStName"   	column="pgDlngStName" />
		<result property="stlmnCnsntDate"  	column="stlmnCnsntDate"/>
		<result property="cnpyDate"  		column="cnpyDate"/>
		<result property="prcsgStCode"  	column="prcsgStCode"/>
		<result property="cncltStCode"  	column="cncltStCode"/>
		<result property="cncltPrcsgRsn"  	column="cncltPrcsgRsn"/>
		<result property="rgpsId"  			column="rgpsId"/>
		<result property="upusId"  			column="upusId"/>
		<result property="editDtm"  		column="editDtm"/>
		<result property="intrfPrcsgDtm"  	column="intrfPrcsgDtm"/>
		
	</resultMap>
    <!-- PG 승인 대사 배치 취소 대상 조회 -->    
	<select id="paymentcancelXo.getPgTradeCancelList" parameterClass="java.util.Map" resultMap="pgTradeCancelMap">
		SELECT pg_dlng_no       AS pgDlngNo
		     , intrf_rgstt_date AS intrfRgsttDate
		     , intrf_hms        AS intrfHms
		     , pgcm_code        AS pgcmCode
		     , pgcm_shop_id     AS pgcmShopId
		     , pgcm_order_id    AS pgcmOrderId
		     , stlmn_type_name  AS stlmnTypeName
		     , stlmn_mean_name  AS stlmnMeanName
		     , pg_stlmn_amnt    AS pgStlmnAmnt
		     , pg_dlng_st_name  AS pgDlngStName
		     , stlmn_cnsnt_date AS stlmnCnsntDate
		     , cnpy_date        AS cnpyDate
		     , prcsg_st_code    AS prcsgStCode
		     , cnclt_st_code    AS cncltStCode
		     , cnclt_prcsg_rsn  AS cncltPrcsgRsn
		     , rgps_id          AS rgpsId
		     , upus_id          AS upusId
		     , edit_dtm         AS editDtm
		     , intrf_prcsg_dtm  AS intrfPrcsgDtm
		  FROM XO_ABNRM_CNSNT_M
		 <!-- WHERE cnpy_date IS NULL
		   AND prcsg_st_code IS NULL -->
		 WHERE prcsg_st_code IS NULL
		<isNotEmpty property="stlmnCnsntDate">
		   AND stlmn_cnsnt_date = #stlmnCnsntDate#
		</isNotEmpty>
	</select>	
	
	<!-- 취소처리결과 업데이트 -->
	<update id="paymentcancelXo.updatePgTradeCancel" parameterClass="java.util.Map">
		UPDATE XO_ABNRM_CNSNT_M
		   SET prcsg_st_code = #prcsgStCode#
		     , cnclt_st_code = '01'
		     , cnclt_prcsg_rsn = #cncltPrcsgRsn#
		     , upus_id = 'BATCH'
		     , edit_dtm = SYSDATE
		     , cnpy_date = TO_CHAR(SYSDATE,'YYYYMMDD')
		 WHERE intrf_rgstt_date = #stlmnCnsntDate#
		   AND pg_dlng_no = #pgDlngNo#
	</update>
	
    <!-- 결제상세방식 조회 (신한 페이판 전용) -->
    <select id="paymentcancelXo.getDtlPayMethod" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT crcr_stlmn_dtl_dvsn_code AS crcrStlmnDtlDvsnCode
		  FROM xo_stlmn_add_infrm_d
		 WHERE sror_order_no = #srorOrderNo#
		   AND stlmn_srnm    = #stlmnSrnm#
    </select>
    
</sqlMap>