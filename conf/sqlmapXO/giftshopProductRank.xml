<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="giftshop">

	<!-- 판매순위정보 : 최신DATA플래그 갱신 -->
	<update id="giftshop.updatePreviousRankNewsestFlag">
		UPDATE XO_STAT_GIFT_RANK
		   SET newest_stat_yn = 'N'
		 WHERE newest_stat_yn = 'Y'
	</update>
	
	<!-- 판매순위정보 : 동일일자 DATA 삭제 -->
	<delete id="giftshop.deletePreviousRankData">
		DELETE
		  FROM XO_STAT_GIFT_RANK
		 WHERE STAT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')	
	</delete>

	<!-- 판매순위정보 : 생성 -->
	<update id="giftshop.createRankData">
		INSERT 
		  INTO xo_stat_gift_rank
		     ( stat_date
			 , product_no
			 , rnk
			 , sale_cnt
			 , sale_amt
			 , base_start_date
			 , base_end_date
			 , newest_stat_yn
			 , reg_date
			 , reg_user
			 )
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')             AS stat_date
		     , stat.product_no                          AS product_no
		     , rnk                                      AS rnk
		     , stat.sale_cnt                            AS sale_cnt
		     , stat.sale_amt                            AS sale_amt
		     , TO_CHAR(TRUNC(SYSDATE - 15), 'YYYYMMDD') AS base_start_date
		     , TO_CHAR(TRUNC(SYSDATE -  1), 'YYYYMMDD') AS base_end_date
		     , 'Y'                                      AS newest_stat_yn
		     , SYSDATE                                  AS reg_date
		     , 'ADMIN'                                  AS reg_user
		  FROM (
		        SELECT r.product_no
		             , r.product_name
		             , r.sale_cnt
		             , r.sale_amt
		             , ROW_NUMBER() OVER (ORDER BY r.sale_amt DESC) AS rnk
		          FROM (
		                SELECT xgp_m.product_no
		                     , xgp_m.product_name
		                     , NVL(sal.product_sale_cnt,  0) AS sale_cnt
		                     , NVL(sal.product_total_amt, 0) AS sale_amt
		                  FROM xo_gift_product xgp_m,
		                       (
							     SELECT product_no
								      , SUM(product_sale_cnt)  AS product_sale_cnt
									  , SUM(product_total_amt) AS product_total_amt
								   FROM (
										   SELECT (CASE WHEN xgi.product_no = 'S000000000029' THEN  'S000000000050'
													    WHEN xgi.product_no = 'S000000000001' THEN  'S000000000042'
													    WHEN xgi.product_no = 'S000000000083' THEN  'S000000000082'
													    WHEN xgi.product_no = 'S000000000032' THEN  'S000000000053'
													    WHEN xgi.product_no = 'S000000000057' THEN  'S000000000056'
													    WHEN xgi.product_no = 'S000000000068' THEN  'S000000000067'
													    WHEN xgi.product_no = 'S000000000066' THEN  'S000000000065'
													    WHEN xgi.product_no = 'S000000000006' THEN  'S000000000043'
													    WHEN xgi.product_no = 'S000000000080' THEN  'S000000000081'
													    WHEN xgi.product_no = 'S000000000003' THEN  'S000000000037'
													    WHEN xgi.product_no = 'S000000000055' THEN  'S000000000054'
													    WHEN xgi.product_no = 'S000000000077' THEN  'S000000000076'
													    WHEN xgi.product_no = 'S000000000075' THEN  'S000000000074'
													    WHEN xgi.product_no = 'S000000000002' THEN  'S000000000036'
													    WHEN xgi.product_no = 'S000000000079' THEN  'S000000000078'
													    WHEN xgi.product_no = 'S000000000030' THEN  'S000000000051'
													    WHEN xgi.product_no = 'S000000000013' THEN  'S000000000040'
													    WHEN xgi.product_no = 'S000000000007' THEN  'S000000000038'
													    WHEN xgi.product_no = 'S000000000005' THEN  'S000000000035'
													    WHEN xgi.product_no = 'S000000000031' THEN  'S000000000052'
													    WHEN xgi.product_no = 'S000000000022' THEN  'S000000000034'
													    WHEN xgi.product_no = 'S000000000020' THEN  'S000000000041'
													    WHEN xgi.product_no = 'S000000000049' THEN  'S000000000025'
													    WHEN xgi.product_no = 'S000000000047' THEN  'S000000000015'
													    WHEN xgi.product_no = 'S000000000046' THEN  'S000000000024'
													    WHEN xgi.product_no = 'S000000000048' THEN  'S000000000014'
													    WHEN xgi.product_no = 'S000000000061' THEN  'S000000000060'
													    WHEN xgi.product_no = 'S000000000059' THEN  'S000000000058'
													    WHEN xgi.product_no = 'S000000000011' THEN  'S000000000044'
													    WHEN xgi.product_no = 'S000000000019' THEN  'S000000000045'
													    ELSE xgi.product_no
											        END) AS product_no
											    , COUNT(xgi.gift_no) AS product_sale_cnt
											    , SUM(xgi.gnd_amount) AS product_total_amt
											 FROM XO_GIFT_ISSUE## xgi
											    , XO_GIFT_PRODUCT xgp
											WHERE xgi.reg_date   <![CDATA[ >= ]]> TRUNC(SYSDATE - 15)
											  AND xgi.reg_date   <![CDATA[ <  ]]> TRUNC(SYSDATE)
											  AND xgi.status       IN ('G00', 'G10')
											  AND xgi.product_no   IS NOT NULL
											  AND xgi.product_type = '2'
											  AND xgi.product_no  = xgp.product_no
											GROUP BY xgi.product_no
										 )
		                              GROUP BY product_no
									  
		                         UNION ALL
								SELECT mstr.product_no          AS product_no
									 , NVL(sale.item_cnt, 0)    AS product_sale_cnt
									 , NVL(sale.item_amount, 0) AS product_total_amt 
								  FROM (
										SELECT xgp.product_no
											 , xs.delegate_sku
											 , xs.delegate_sku2
											 , hot_yn
										  FROM XO_GIFT_PRODUCT        xgp
											 , XO_GIFT_PRODUCT_DETAIL xgpd
											 , XO_SKU                 xs       
										 WHERE xgp.use_flag     = 'Y'  
										   AND xgp.product_type = '1'
										   AND xgp.product_no   = xgpd.product_no
										   AND xgpd.sku_no      = xs.sku_no  
									   ) mstr
									, (
										SELECT /*+ ORDERED INDEX(xgid PK_XO_GIFT_ISSUE_DETAIL) */
											   xs.delegate_sku
											 , xs.delegate_sku2
											 , COUNT(1)            AS item_cnt
											 , SUM(xgi.gnd_amount) AS item_amount
										  FROM XO_GIFT_ISSUE##      xgi
											 , XO_GIFT_ISSUE_DETAIL xgid
											 , XO_SKU               xs
										 WHERE xgi.reg_date   <![CDATA[ >= ]]> TRUNC(SYSDATE - 15)
										   AND xgi.reg_date   <![CDATA[ < ]]>  TRUNC(SYSDATE)
										   AND xgi.status      IN ('G00', 'G10')
										   AND xgi.gift_no      = xgid.gift_no
										   AND xgid.seq_sub_no  IS NULL
										   AND xgid.sku_no      = xs.sku_no
										   AND xgi.product_type = '1'
										 GROUP BY xs.delegate_sku
												, xs.delegate_sku2
									  ) sale
								 WHERE mstr.delegate_sku  = sale.delegate_sku
								   AND mstr.delegate_sku2 = sale.delegate_sku2
		                       ) sal
		                 WHERE xgp_m.product_no = sal.product_no (+)
		               ) r
		       ) stat
		 ORDER BY stat.rnk
	</update>

	<!-- 신상품(NEW) 정보 : 이전 최신집계정보 플래그 삭제 -->
	<update id="giftshop.updatePreviousNewNewsestFlag">
		UPDATE XO_STAT_GIFT_NEW
		   SET newest_stat_yn = 'N'
		 WHERE newest_stat_yn = 'Y'	
	</update>
	
	<!-- 신상품(NEW) 정보 : 동일일자 DATA 삭제 -->
	<delete id="giftshop.deletePreviousNewData">
		DELETE
		  FROM XO_STAT_GIFT_NEW
		 WHERE STAT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')	
	</delete>
	
	<!-- 판매순위정보 : 생성 -->
	<update id="giftshop.createNewProductData">
		INSERT 
		  INTO XO_STAT_GIFT_NEW
			 ( stat_date
			 , product_no
			 , new_from_date
			 , sale_cnt
			 , sale_amt
			 , base_start_date
			 , base_end_date
			 , newest_stat_yn
			 , reg_date
			 , reg_user
			 )
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')      AS stat_date
			 , xgp.product_no                    AS product_no
			 , xgp.new_from_day                  AS new_from_date
			 , NVL(xsgr.sale_cnt, 0)             AS sale_cnt
			 , NVL(xsgr.sale_amt, 0)             AS sale_amt
			 , TO_CHAR(SYSDATE - 15, 'YYYYMMDD') AS base_start_date
			 , TO_CHAR(SYSDATE -  1, 'YYYYMMDD') AS base_end_date
			 , 'Y'                               AS newest_stat_yn
			 , SYSDATE                           AS reg_date
			 , 'ADMIN'                           AS reg_user
		  FROM XO_GIFT_PRODUCT   xgp
			 , XO_STAT_GIFT_RANK xsgr
		 WHERE xgp.product_no = xsgr.product_no (+)
		   AND xsgr.stat_date = TO_CHAR(SYSDATE, 'YYYYMMDD')
	</update>
	

</sqlMap>